name: Build Deploy

on:
  workflow_dispatch:
  push:
    branches: 
      - "main"

jobs:
  coverage:
    runs-on: ubuntu-latest

    steps:
      - name: Run tests and generate coverage report
        run: |
          go tool cover -func=coverage.out | grep total | awk '{print "Average Coverage:", $3}'
  
  build:
    name: Build Docker Image
    needs: coverage
    runs-on: ubuntu-latest # specify the build machine
    steps:
      - # checkout to the repository on the build machine
        name: Checkout
        uses: actions/checkout@v3
      - # Login into AWS
        name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
      - # Login into Amazon ECR
        name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - # create a build kit builder instance
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Get AWS Account ID
        id: aws_account
        run: echo "::set-output name=account_id::$(aws sts get-caller-identity --query Account --output text)"

      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin ${{ steps.aws_account.outputs.account_id }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com

      - name: Build Docker Image
        run: |
          docker build \
            --build-arg AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} \
            --build-arg AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} \
            --build-arg AWS_SESSION_TOKEN=${{ secrets.AWS_SESSION_TOKEN }} \
            --build-arg AWS_PRODUCTION_PAYMENT_SQS_URL=${{ secrets.AWS_PRODUCTION_PAYMENT_SQS_URL }} \
            --build-arg AWS_PRODUCTION_UPDATE_SQS_URL=${{ secrets.AWS_PRODUCTION_UPDATE_SQS_URL }} \
            --build-arg AWS_REGION=${{ secrets.AWS_REGION }} \
            --build-arg PORT=${{ secrets.PORT }} \
            --build-arg MONGO_URL=${{ secrets.MONGO_URL }} \ 
            -t fiap-tech-go .
            
          docker tag fiap-tech-go ${{ steps.aws_account.outputs.account_id }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/productions:latest
          
          docker push ${{ steps.aws_account.outputs.account_id }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/productions:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Deploy Microservice on K8S
        uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ secrets.TARGET_REPO_PAT }}
          repository: FIAP-6SOAT-G10/fiap-fast-food-ms-producao-k8s
          event-type: trigger-deploy

